/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package package_default;

import entity.*;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.Dataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.xy.YIntervalSeries;
import org.jfree.data.xy.YIntervalSeriesCollection;

/**
 *
 * @author caio
 */
public class Resultados extends javax.swing.JFrame {

    /**
     * Creates new form Resultados
     */
    public Resultados() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new ChartPanel(null);
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();

        setTitle("Resultados");
        setBounds(new java.awt.Rectangle(200, 100, 0, 0));
        setIconImage((new javax.swing.ImageIcon(getClass().getResource("/package_default/imgs/icon_results.png"))).getImage());
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton1.setText("Atualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Sessão:");

        comboSession = new CustomComboBoxModel(
            CustomComboBoxModel.SESSION_DATA,
            bridge.ServiceBridge.querySessionList());
        jComboBox2.setModel(comboSession);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 108, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(369, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sessão", jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        comboSubjetiva = new CustomComboBoxModel(
            CustomComboBoxModel.SMETRIC_DATA,
            bridge.ServiceBridge.queryMetricList());
        jComboBox3.setModel(comboSubjetiva);

        jLabel2.setText("Métrica Subjetiva:");

        jLabel3.setText("Métrica Objetiva:");

        comboObjetiva = new CustomComboBoxModel(
            CustomComboBoxModel.OMETRIC_DATA,
            bridge.ServiceBridge.queryMetricList());
        jComboBox4.setModel(comboObjetiva);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 37, Short.MAX_VALUE))
                    .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(306, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mídia", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTabbedPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
	// Botao Atualizar
	if(jTabbedPane1.getSelectedIndex() == 0)
	    ((ChartPanel)jPanel1).setChart(createSessionResultChart());
	else
	    ((ChartPanel)jPanel1).setChart(createMediaResultChart());
    }//GEN-LAST:event_jButton1ActionPerformed

    private DefaultStatisticalCategoryDataset resultsFromSession(ArrayList<UserRate> result) {
	DefaultStatisticalCategoryDataset data = new DefaultStatisticalCategoryDataset();
	ArrayList<MeanAndDeviation> stats = new ArrayList<MeanAndDeviation>();
	for (UserRate userRate : result) {
	    MeanAndDeviation m = new MeanAndDeviation(userRate.getMedia().getId());
	    if(!stats.contains(m)) {
		m.addValue(userRate.getValue());
		stats.add(m);
	    } else stats.get(stats.indexOf(m)).addValue(userRate.getValue());
	}
	for (MeanAndDeviation md : stats) {
	    data.add(md.getMean(), md.getDeviation(), "", bridge.ServiceBridge.queryMediaById(md.getId()).getTitle());
	}
	return data;
    }
    
    private JFreeChart createSessionResultChart(){
	Session session = (Session)comboSession.getAuxData(jComboBox2.getSelectedIndex());
	ArrayList<UserRate> ur = (ArrayList<UserRate>)bridge.ServiceBridge.queryUserRateList();
	ArrayList<UserRate> results = new ArrayList<UserRate>();
	for (UserRate userRate : ur) {
	    if(userRate.getSession().getId() == session.getId()) results.add(userRate);
	}
	DefaultStatisticalCategoryDataset data = resultsFromSession(results);
	//data.addValue(value, metrica, media);
	JFreeChart chart = ChartFactory.createBarChart(session.getTitle(), "Vídeos", "Nota",
		data, PlotOrientation.VERTICAL, false, false, false);
	CategoryPlot plot = chart.getCategoryPlot();
	plot.getRangeAxis().setUpperBound(5.5);
	StatisticalBarRenderer rend = new StatisticalBarRenderer();
	rend.setErrorIndicatorPaint(Color.BLACK);
	rend.setSeriesPaint(0, Color.GREEN);
	rend.setMaximumBarWidth(0.10);
	plot.setRenderer(rend);
	
	return chart;
    }
    
    private ArrayList<UserRate> getUserRatesByMedia(int id){
	ArrayList<UserRate> result = new ArrayList<UserRate>();
	for (UserRate userRate : bridge.ServiceBridge.queryUserRateList()) {
	    if(userRate.getMedia().getId() == id)
		result.add(userRate);
	}
	return result;
    }
    
    private YIntervalSeries getSeriesByReference(ArrayList<SoftwareRate> sr){
	if(sr.isEmpty()) return new YIntervalSeries("");
	YIntervalSeries series = new YIntervalSeries(sr.get(0).getReferenceMedia().getTitle());
	ArrayList<UserRate> userRates;
	MeanAndDeviation m;
	int id;
	for (SoftwareRate rate : sr) {
	    id = rate.getMedia().getId();
	    userRates = getUserRatesByMedia(id);
	    m = new MeanAndDeviation(id);
	    for (UserRate ur : userRates) {
		m.addValue(ur.getValue());
	    }
	    java.lang.System.out.println(m.getMean() + " dev " + m.getDeviation());
	    series.add(rate.getValue(), m.getMean(), m.getMean() - m.getDeviation(), m.getMean() + m.getDeviation());
	}
	return series;
    }

    private JFreeChart createMediaResultChart(){
	YIntervalSeriesCollection data = new YIntervalSeriesCollection();
	Metric subMetric = (Metric)comboSubjetiva.getAuxData(jComboBox3.getSelectedIndex());
	Metric objMetric = (Metric)comboObjetiva.getAuxData(jComboBox4.getSelectedIndex());
	ArrayList<Media> referenceMedias = new ArrayList<Media>();
	ArrayList<SoftwareRate> allSRates = bridge.ServiceBridge.querySoftwareRateList(),
		resultByReference = new ArrayList<SoftwareRate>();
	// TODO pegar as midias neste array
	referenceMedias.add(bridge.ServiceBridge.queryMediaById(1));
	
	for (Media reference : referenceMedias) {
	    for (SoftwareRate allSR : allSRates) {
		java.lang.System.out.println(allSR.getReferenceMedia().getId() +" "+ reference.getId() +" "+ allSR.getMetric().getId() +" "+ objMetric.getId());
		if(allSR.getReferenceMedia().getId() == reference.getId() && allSR.getMetric().getId() == objMetric.getId()){
		    resultByReference.add(allSR);
		}
	    }
	    YIntervalSeries series = getSeriesByReference(resultByReference);
	    data.addSeries(series);
	    resultByReference.clear();
	}
	//configurando chart
	JFreeChart chart = ChartFactory.createXYLineChart("Title", objMetric.getName(), "MOS", data, PlotOrientation.VERTICAL, true, false, false);
	XYPlot plot = chart.getXYPlot();
	NumberAxis rangeAxis = (NumberAxis)plot.getRangeAxis();
	rangeAxis.setAutoRangeIncludesZero(true);
	XYErrorRenderer rend = new XYErrorRenderer();
	rend.setBaseLinesVisible(true);
	rend.setUseFillPaint(true);
	rend.setBaseFillPaint(Color.white);
	plot.setRenderer(rend);
	ChartUtilities.applyCurrentTheme(chart);
	return chart;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Resultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Resultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Resultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Resultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Resultados().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox2;
    private CustomComboBoxModel comboSession;
    private javax.swing.JComboBox jComboBox3;
    private CustomComboBoxModel comboSubjetiva;
    private javax.swing.JComboBox jComboBox4;
    private CustomComboBoxModel comboObjetiva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
